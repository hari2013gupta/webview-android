name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # - name: Generated APK AAB (Clean)
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    # Every day at 1am
    - cron: '0 1 * * *'

jobs:
  remove-old-artifacts:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Clean all artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '60 seconds' # '<number> <unit>', e.g. 5 days, 2 years, 90 seconds, parsed by Moment.js
          # Optional inputs
          # skip-tags: true
          # skip-recent: 5
  build:
    name: Android Build & Test
    runs-on: macOS-latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      #    # Set Current Date As Env Variable
      #    - name: Set current date as env variable
      #      run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      #
      #    # Set Repository Name As Env Variable
      #    - name: Set repository name as env variable
      #      run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'
          cache: gradle

      #    - name: Setup Android SDK
      #      uses: android-actions/setup-android@v2
      #
      #    # Cache Gradle dependencies and Gradle Wrapper
      #    - name: Setup Gradle Cache
      #      uses: actions/cache@v2
      #      with:
      #        path: |
      #          ~/.gradle/caches
      #          ~/.gradle/wrapper
      #        key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Validate Wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1
      - name: Gradle Test
        run: ./gradlew test
      #    - name: Gradle Test Stacktrace
      #      run: ./gradlew test --stacktrace
      #    - name: Run Ktlint
      #      run: ./gradlew ktlintStagingDebugCheck
      - name: Run Linters and Test
        run: ./gradlew check

      #    - name: Run Unit Tests
      #      run: ./gradlew testStagingDebugUnitTest
      #      run: ./gradlew testDebugUnitTest
      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: Test-Reports
          path: app/build/reports
        if: always()

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Release AAB
        run: ./gradlew app:bundleRelease

        # Github release
#    - name: Release
#      id: create_release
#      uses: actions/create-release@v1
#      with:
#        release_name: Release v.${{ env.VERSION_NAME }}
#        draft: false
#        prerelease: false
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#    - name: Upload Release APK
#      id: upload_release_asset
#      uses: actions/upload-release-asset@v1.0.1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: app/build/outputs/apk/release/app-release.apk
#        asset_name: signed-artifact.apk
#        asset_content_type: application/zip

#    - name: Deploy to Play Store
#      uses: r0adkll/upload-google-play@v1
#      with:
#        serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
#        packageName: your.app.package
#        releaseFiles: app/build/outputs/bundle/release/*.aab
#        track: internal
#//-------------------------repeated--------------------

#    # Create APK Debug
#    - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
#      run: ./gradlew assembleDebug
#
#    # Create APK Release
#    - name: Build apk release project (APK) - ${{ env.main_project_module }} module
#      run: ./gradlew assemble
#
#    # Create Bundle AAB Release
#    # Noted for main module build [main_project_module]:bundleRelease
#    - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
#      run: ./gradlew ${{ env.main_project_module }}:bundleRelease
#
#    # Upload Artifact Build
#    # Noted For Output [main_project_module]/build/outputs/apk/debug/
#    - name: Upload APK Debug - ${{ env.repository_name }}
#      uses: actions/upload-artifact@v4
#      with:
#        name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated
#        path: ${{ env.main_project_module }}/build/outputs/apk/debug/
#
#    # Noted For Output [main_project_module]/build/outputs/apk/release/
#    - name: Upload APK Release - ${{ env.repository_name }}
#      uses: actions/upload-artifact@v4
#      with:
#        name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
#        path: ${{ env.main_project_module }}/build/outputs/apk/release/
#
#    # Noted For Output [main_project_module]/build/outputs/bundle/release/
#    - name: Upload AAB (App Bundle) Release - ${{ env.repository_name }}
#      uses: actions/upload-artifact@v4
#      with:
#        name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - App bundle(s) AAB release generated
#        path: ${{ env.main_project_module }}/build/outputs/bundle/release/
#

